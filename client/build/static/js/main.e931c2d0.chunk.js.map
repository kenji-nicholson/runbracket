{"version":3,"sources":["components/Avatar/Avatar.tsx","components/Theme/theme.ts","components/Forms/userInfoStyles.tsx","hooks/store.ts","app/slices/authSlice.ts","app/services/auth.ts","components/Alert.tsx","components/Forms/DarkModeSwitch.tsx","components/Forms/FormComponents.tsx","components/Views/LoginView.tsx","app/services/user.ts","components/Views/RegisterView.tsx","components/Views/Home/background.png","components/Views/Home/HeroSection.tsx","components/Views/Home/HomeView.tsx","components/NavigationBar/NavigationBar.tsx","app/services/tournament.ts","components/Forms/SectionHeader.tsx","components/Views/CreateTournament/CreateTournamentInformation.tsx","components/Views/CreateTournament/CreateParticipantRow.tsx","components/Views/CreateTournament/CreateTournamentParticipants.tsx","components/Views/CreateTournament/CreateTournamentView.tsx","components/ProtectedRoute.tsx","components/Views/UserProfile/Tournaments/TournamentRow.tsx","components/Views/UserProfile/Tournaments/TournamentSection.tsx","components/Views/UserProfile/UserProfileInformation.tsx","components/Views/UserProfile/EditUserAccountInformation.tsx","components/Views/UserProfile/EditUserAccountSettings.tsx","components/Views/UserProfile/UserSettings.tsx","components/Views/UserProfile/UserProfileView.tsx","components/Pagination/PaginationLink.tsx","components/Views/Tournaments/TournamentsView.tsx","hooks/routing.ts","app/slices/tournamentSlice.ts","components/Views/Tournament/RecordMatchDialog.tsx","components/Views/Tournament/BracketSeed.tsx","components/Views/Tournament/TournamentBracket.tsx","components/Views/Tournament/TournamentInformation.tsx","components/Views/Tournament/ParticipantRow.tsx","components/Views/Tournament/TournamentParticipants.tsx","components/Views/Tournament/TournamentView.tsx","App.tsx","app/store.ts","components/Theme/CustomThemeProvider.tsx","index.tsx"],"names":["AvatarSize","theme","createTheme","palette","primary","main","secondary","mode","darkTheme","greyBackgroundColor","grey","background","default","UserInfoContainer","styled","marginTop","spacing","display","flexDirection","alignItems","paddingTop","UserInfoAvatar","Avatar","margin","backgroundColor","UserInfoForm","width","UserInfoSubmit","Button","BackgroundBox","Box","height","overflow","flexGrow","useAppDispatch","useSelector","useDispatch","authSlice","createSlice","name","initialState","user","token","reducers","setCredentials","state","payload","refresh_token","logOut","setUser","refreshToken","actions","baseAuthQuery","fetchBaseQuery","baseUrl","process","prepareHeaders","headers","getState","auth","set","refreshQuery","baseQueryWithReauth","args","api","extraOptions","a","result","error","status","url","method","refreshResult","data","console","log","dispatch","authApi","createApi","reducerPath","baseQuery","endpoints","builder","login","mutation","query","credentials","body","useLoginMutation","Alert","open","handleClose","severity","message","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","variant","DefaultErrorAlert","DefaultSuccessAlert","DarkModeSwitch","Switch","padding","transform","color","backgroundImage","encodeURIComponent","opacity","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","FormTextField","props","control","rest","render","field","fieldState","TextField","fullWidth","id","Boolean","helperText","defaultValue","FormCheckbox","label","FormControlLabel","Checkbox","onChange","e","target","checked","value","FormDarkModeSwitch","LoginView","validationSchema","object","shape","email","string","required","password","useForm","resolver","yupResolver","handleSubmit","push","useHistory","useState","setOpen","onSubmit","unwrap","Container","component","maxWidth","CssBaseline","Typography","Grid","container","item","xs","autoComplete","autoFocus","type","Link","href","onClick","event","reason","userApi","tagTypes","build","getUsers","providesTags","items","map","user_id","addUser","registerRequest","invalidatesTags","getUser","updateUser","patch","onQueryStarted","queryFulfilled","patchResult","util","updateQueryData","toString","draft","Object","assign","undo","deleteUser","useAddUserMutation","useGetUserQuery","useDeleteUserMutation","useUpdateUserMutation","useGetUsersQuery","RegisterView","first_name","last_name","display_name","signUp","response","sm","justifyContent","HeroGrid","backgroundSize","backgroundAttachment","objectFit","HeroSection","alignContent","direction","align","sx","fontWeight","paragraph","HomeView","stringToColor","i","hash","length","charCodeAt","substr","stringAvatar","size","bgcolor","children","toUpperCase","StatusEnum","HomeLink","textDecoration","userSelect","NavigationBar","anchorEl","setAnchorEl","loginSection","IconButton","aria-controls","aria-haspopup","aria-expanded","undefined","currentTarget","Small","Menu","MenuListProps","MenuItem","pathname","detail","marginRight","AppBar","Toolbar","to","fontFamily","tournamentApi","tournament","getTournaments","arg","params","tournament_id","getTournament","getTournamentsByUserId","updateMatch","match_id","useTournamentMutation","useGetTournamentsByUserIdQuery","useGetTournamentsQuery","useGetTournamentQuery","useUpdateMatchMutation","PageSection","Paper","overflowX","PageTitle","marginY","SectionHeader","gutterBottom","paddingBottom","CreateTournamentInformation","rows","multiline","CreateParticipantRow","remove","index","is_seeded","TableRow","TableCell","Close","CreateTournamentParticipants","watch","useFieldArray","fields","append","defaultParticipant","participant_id","participant_name","seed","participant","setParticipant","addParticipant","marginBottom","onKeyDown","key","alignSelf","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableBody","CreateTournamentView","tournament_name","tournament_description","boolean","participants","array","of","createTournament","cloneDeep","code","preventDefault","checkKeyDown","p","marginLeft","ProtectedRoute","TournamentRow","date","tournament_date","moment","utc","local","format","ListItem","ListItemButton","ListItemText","TournamentSection","tournaments","page","count","setPage","List","Pagination","UserProfileInformation","Large","EditUserAccountInformation","EditUserAccountSettings","UserSettings","defaultValues","alert","setAlert","Divider","UserProfileView","selectedTab","setSelectedTab","useParams","isLoading","per_page","parseInt","tournamentData","tournamentDataIsLoading","isCurrentUser","hasTournaments","Backdrop","CircularProgress","Tabs","tab","Tab","_meta","total_pages","PaginationLink","baseLink","location","URLSearchParams","search","get","renderItem","PaginationItem","TournamentsView","useLocation","tournamentSlice","dialogOpen","selectedMatch","hasPermission","showDialogForMatch","match","closeDialog","setPermission","RecordMatchDialog","getValues","setValue","reset","useEffect","Dialog","DialogTitle","aria-label","right","DialogContent","DialogContentText","participant_a","participant_b","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","DialogActions","WinnerTypography","BracketSeedParticipant","paddingLeft","BracketSeedScore","is_winner","score","BracketSeedItem","COMPLETED","orientation","flexItem","textAlign","Edit","IsWinner","participant_a_score","participant_b_score","winner_id","BracketSeed","breakpoint","mobileBreakpoint","style","fontSize","TournamentBracket","matches","reduce","r","temp","find","o","title","round","seeds","rounds","roundTitleComponent","roundIndex","renderSeedComponent","TournamentInformation","ParticipantRow","TournamentParticipants","TournamentView","App","exact","path","rootReducer","combineReducers","reducer","authReducer","tournamentReducer","persistConfig","version","storage","blacklist","whitelist","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","persistor","persistStore","CustomThemeProvider","darkMode","dark_mode","ThemeProvider","ReactDOM","loading","StyledEngineProvider","injectFirst","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e931c2d0.chunk.js","sourcesContent":["export enum AvatarSize {\r\n  Small = 30,\r\n  Large = 60,\r\n}\r\n\r\nfunction stringToColor(string: string) {\r\n  let hash = 0;\r\n  let i;\r\n\r\n  /* eslint-disable no-bitwise */\r\n  for (i = 0; i < string.length; i += 1) {\r\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n\r\n  let color = \"#\";\r\n\r\n  for (i = 0; i < 3; i += 1) {\r\n    const value = (hash >> (i * 8)) & 0xff;\r\n    color += `00${value.toString(16)}`.substr(-2);\r\n  }\r\n  /* eslint-enable no-bitwise */\r\n\r\n  return color;\r\n}\r\n\r\nexport function stringAvatar(name: string, size: AvatarSize) {\r\n  return {\r\n    sx: {\r\n      bgcolor: stringToColor(name),\r\n      height: size,\r\n      width: size,\r\n    },\r\n    children: name[0].toUpperCase(),\r\n  };\r\n}\r\n","import { createTheme, Theme } from \"@mui/material/styles\";\r\n\r\nconst theme: Theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#3b2483\",\r\n    },\r\n    secondary: {\r\n      main: \"#f57c00\",\r\n    },\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nexport const darkTheme: Theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#f57c00\",\r\n    },\r\n    secondary: {\r\n      main: \"#3b2483\",\r\n    },\r\n    mode: \"dark\",\r\n  },\r\n});\r\n\r\nexport const greyBackgroundColor = (theme: Theme) => {\r\n  return theme.palette.mode === \"light\"\r\n    ? theme.palette.grey[100]\r\n    : theme.palette.background.default;\r\n};\r\n\r\nexport default theme;\r\n","import { styled } from \"@mui/material/styles\";\r\nimport { Avatar, Box, Button } from \"@mui/material\";\r\nimport { greyBackgroundColor } from \"../Theme/theme\";\r\n\r\nexport const UserInfoContainer = styled(\"div\")(({ theme }) => ({\r\n  marginTop: theme.spacing(8),\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  paddingTop: 20,\r\n}));\r\n\r\nexport const UserInfoAvatar = styled(Avatar)(({ theme }) => ({\r\n  margin: theme.spacing(1),\r\n  backgroundColor: theme.palette.secondary.main,\r\n}));\r\n\r\nexport const UserInfoForm = styled(\"form\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  marginTop: theme.spacing(1),\r\n}));\r\n\r\nexport const UserInfoSubmit = styled(Button)(({ theme }) => ({\r\n  margin: theme.spacing(3, 0, 2),\r\n}));\r\n\r\nexport const BackgroundBox = styled(Box)(({ theme }) => ({\r\n  height: \"100vh\",\r\n  overflow: \"auto\",\r\n  flexGrow: 1,\r\n  backgroundColor: greyBackgroundColor(theme),\r\n}));\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { AppDispatch, RootState } from \"../app/store\";\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { CurrentUser, User } from \"../services/auth\";\r\n\r\ntype AuthState = {\r\n  user: CurrentUser | null;\r\n  token: string | null;\r\n  refresh_token: string | null;\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: { user: null, token: null } as AuthState,\r\n  reducers: {\r\n    setCredentials: (\r\n      state,\r\n      {\r\n        payload: { user, token, refresh_token },\r\n      }: PayloadAction<{\r\n        user: CurrentUser;\r\n        token: string;\r\n        refresh_token: string;\r\n      }>\r\n    ) => {\r\n      state.user = user;\r\n      state.token = token;\r\n      state.refresh_token = refresh_token;\r\n    },\r\n    logOut: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      state.refresh_token = null;\r\n    },\r\n    setUser: (\r\n      state,\r\n      { payload: { user } }: PayloadAction<{ user: CurrentUser }>\r\n    ) => {\r\n      state.user = user;\r\n    },\r\n    refreshToken: (\r\n      state,\r\n      { payload: { token } }: PayloadAction<{ token: string }>\r\n    ) => {\r\n      state.token = token;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setCredentials, logOut, setUser, refreshToken } =\r\n  authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import {\r\n  BaseQueryFn,\r\n  createApi,\r\n  FetchArgs,\r\n  fetchBaseQuery,\r\n  FetchBaseQueryError,\r\n} from \"@reduxjs/toolkit/query/react\";\r\nimport { logOut, refreshToken } from \"../slices/authSlice\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport interface User {\r\n  display_name: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  user_id: number;\r\n}\r\n\r\nexport interface CurrentUser {\r\n  display_name: string;\r\n  first_name: string;\r\n  last_name: string;\r\n  user_id: number;\r\n  dark_mode: boolean;\r\n  email: string;\r\n}\r\n\r\nexport interface UserResponse {\r\n  user: CurrentUser;\r\n  token: string;\r\n  refresh_token: string;\r\n}\r\n\r\nexport interface LoginRequest {\r\n  email: string;\r\n  password: string;\r\n  //rememberMe: boolean;\r\n}\r\n\r\ninterface RefreshResponse {\r\n  token: string;\r\n}\r\n\r\nexport const baseAuthQuery = fetchBaseQuery({\r\n  baseUrl: process.env.REACT_APP_API_URL,\r\n  prepareHeaders: (headers, { getState }) => {\r\n    const token = (getState() as RootState).auth.token;\r\n    if (token) {\r\n      headers.set(\"authorization\", `Bearer ${token}`);\r\n    }\r\n    return headers;\r\n  },\r\n});\r\n\r\nexport const refreshQuery = fetchBaseQuery({\r\n  baseUrl: process.env.REACT_APP_API_URL,\r\n  prepareHeaders: (headers, { getState }) => {\r\n    const token = (getState() as RootState).auth.refresh_token;\r\n    if (token) {\r\n      headers.set(\"authorization\", `Bearer ${token}`);\r\n    }\r\n    return headers;\r\n  },\r\n});\r\n\r\nexport const baseQueryWithReauth: BaseQueryFn<\r\n  string | FetchArgs,\r\n  unknown,\r\n  FetchBaseQueryError\r\n> = async (args, api, extraOptions) => {\r\n  let result = await baseAuthQuery(args, api, extraOptions);\r\n\r\n  if (result.error && result.error.status === 401) {\r\n    const refreshResult = await refreshQuery(\r\n      { url: \"token/refresh\", method: \"POST\" },\r\n      api,\r\n      extraOptions\r\n    );\r\n\r\n    if (refreshResult.data) {\r\n      console.log(refreshResult.data);\r\n      api.dispatch(refreshToken(refreshResult.data as RefreshResponse));\r\n\r\n      // retry the initial query\r\n      result = await baseAuthQuery(args, api, extraOptions);\r\n    } else {\r\n      api.dispatch(logOut());\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const authApi = createApi({\r\n  reducerPath: \"authApi\",\r\n  baseQuery: baseAuthQuery,\r\n  endpoints: (builder) => ({\r\n    login: builder.mutation<UserResponse, LoginRequest>({\r\n      query: (credentials) => ({\r\n        url: \"login\",\r\n        method: \"POST\",\r\n        body: credentials,\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useLoginMutation } = authApi;\r\n","import React from \"react\";\r\nimport {\r\n  Snackbar,\r\n  Alert as MuiAlert,\r\n  AlertColor,\r\n  SnackbarCloseReason,\r\n} from \"@mui/material\";\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  handleClose:\r\n    | ((\r\n        event: React.SyntheticEvent<any, Event>,\r\n        reason: SnackbarCloseReason\r\n      ) => void)\r\n    | undefined;\r\n  reason?: string;\r\n  severity: AlertColor;\r\n  message: string;\r\n}\r\n\r\nconst Alert: React.FC<Props> = ({ open, handleClose, severity, message }) => {\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n    >\r\n      <MuiAlert variant=\"filled\" severity={severity}>\r\n        {message}\r\n      </MuiAlert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n\r\nexport interface AlertParams {\r\n  severity: AlertColor;\r\n  message: string;\r\n}\r\n\r\nexport const DefaultErrorAlert: AlertParams = {\r\n  severity: \"error\",\r\n  message: \"Oops! There was a problem.\",\r\n};\r\n\r\nexport const DefaultSuccessAlert: AlertParams = {\r\n  severity: \"success\",\r\n  message: \"Changes saved!\",\r\n};\r\n","import { styled } from \"@mui/material/styles\";\r\nimport Switch from \"@mui/material/Switch\";\r\n\r\nexport const DarkModeSwitch = styled(Switch)(({ theme }) => ({\r\n  width: 62,\r\n  height: 34,\r\n  padding: 7,\r\n  \"& .MuiSwitch-switchBase\": {\r\n    margin: 1,\r\n    padding: 0,\r\n    transform: \"translateX(6px)\",\r\n    \"&.Mui-checked\": {\r\n      color: \"#fff\",\r\n      transform: \"translateX(22px)\",\r\n      \"& .MuiSwitch-thumb:before\": {\r\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n          \"#fff\"\r\n        )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\r\n      },\r\n      \"& + .MuiSwitch-track\": {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n      },\r\n    },\r\n  },\r\n  \"& .MuiSwitch-thumb\": {\r\n    backgroundColor:\r\n      theme.palette.mode === \"dark\"\r\n        ? theme.palette.secondary.main\r\n        : theme.palette.primary.main,\r\n    width: 32,\r\n    height: 32,\r\n    \"&:before\": {\r\n      content: \"''\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      left: 0,\r\n      top: 0,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundPosition: \"center\",\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\r\n        \"#fff\"\r\n      )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\r\n    },\r\n  },\r\n  \"& .MuiSwitch-track\": {\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\",\r\n    borderRadius: 20 / 2,\r\n  },\r\n}));\r\n","import { Checkbox, FormControlLabel, TextField } from \"@mui/material\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { DarkModeSwitch } from \"./DarkModeSwitch\";\r\n\r\ninterface FormTextFieldProps {\r\n  name: string;\r\n  [x: string]: any;\r\n}\r\n\r\ninterface FormCheckboxProps {\r\n  [x: string]: any;\r\n  label?: string;\r\n}\r\n\r\nexport const FormTextField: React.FC<FormTextFieldProps> = (props) => {\r\n  const { name, control, ...rest } = props;\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          fullWidth\r\n          id={name}\r\n          error={Boolean(error?.message)}\r\n          helperText={error?.message}\r\n          {...field}\r\n          {...rest}\r\n        />\r\n      )}\r\n      defaultValue=\"\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const FormCheckbox: React.FC<FormCheckboxProps> = (props) => {\r\n  const { name, control, label, ...rest } = props;\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      defaultValue={true}\r\n      render={({ field }) => (\r\n        <FormControlLabel\r\n          label={label}\r\n          control={\r\n            <Checkbox\r\n              color=\"secondary\"\r\n              onChange={(e) => field.onChange(e.target.checked)}\r\n              checked={field.value}\r\n              {...rest}\r\n            />\r\n          }\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport const FormDarkModeSwitch: React.FC<FormCheckboxProps> = (props) => {\r\n  const { name, control, label, ...rest } = props;\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      defaultValue={true}\r\n      render={({ field }) => (\r\n        <FormControlLabel\r\n          label={label}\r\n          control={\r\n            <DarkModeSwitch\r\n              onChange={(e) => field.onChange(e.target.checked)}\r\n              checked={field.value}\r\n              {...rest}\r\n            />\r\n          }\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n  UserInfoAvatar,\r\n  UserInfoContainer,\r\n  UserInfoForm,\r\n  UserInfoSubmit,\r\n} from \"../Forms/userInfoStyles\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAppDispatch } from \"../../hooks/store\";\r\nimport { setCredentials } from \"../../app/slices/authSlice\";\r\nimport { useLoginMutation } from \"../../app/services/auth\";\r\nimport type { LoginRequest } from \"../../app/services/auth\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Alert from \"../Alert\";\r\nimport { string, object } from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormTextField } from \"../Forms/FormComponents\";\r\n\r\ninterface Props {}\r\n\r\nexport const LoginView: React.FC<Props> = () => {\r\n  const validationSchema = object().shape({\r\n    email: string().required(\"Email is required.\").email(\"Not a valid email.\"),\r\n    password: string().required(\"Password is required.\"),\r\n  });\r\n\r\n  const { handleSubmit, control } = useForm<LoginRequest>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const dispatch = useAppDispatch();\r\n  const { push } = useHistory();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const [login] = useLoginMutation();\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit = async (data: LoginRequest) => {\r\n    try {\r\n      const user = await login(data).unwrap();\r\n      dispatch(setCredentials(user));\r\n      push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Helmet>\r\n        <title>RunBracket - Login</title>\r\n      </Helmet>\r\n      <CssBaseline />\r\n      <UserInfoContainer>\r\n        <UserInfoAvatar>\r\n          <LockOutlinedIcon />\r\n        </UserInfoAvatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <UserInfoForm onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                control={control}\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                control={control}\r\n                autoComplete=\"current-password\"\r\n                type=\"password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <UserInfoSubmit\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Log In\r\n          </UserInfoSubmit>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              {\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              }\r\n            </Grid>\r\n            <Grid item>\r\n              <Link\r\n                href=\"#\"\r\n                variant=\"body2\"\r\n                onClick={() => {\r\n                  push(\"/register\");\r\n                }}\r\n              >\r\n                {\"Don't have an account? Sign up.\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Alert\r\n            open={open}\r\n            handleClose={handleClose}\r\n            severity=\"error\"\r\n            message=\"Incorrect username or password.\"\r\n          />\r\n        </UserInfoForm>\r\n      </UserInfoContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport { RootState } from \"../store\";\r\nimport {\r\n  baseQueryWithReauth,\r\n  CurrentUser,\r\n  LoginRequest,\r\n  User,\r\n  UserResponse,\r\n} from \"./auth\";\r\nimport PaginatedData from \"./pagination\";\r\n\r\nexport type Users = User[];\r\n\r\nexport interface RegisterResponse {\r\n  token: string;\r\n}\r\n\r\nexport interface RegisterRequest {\r\n  first_name: string;\r\n  last_name: string;\r\n  display_name: string;\r\n  email: string;\r\n  password: string;\r\n  //rememberMe: boolean;\r\n}\r\n\r\nexport const userApi = createApi({\r\n  reducerPath: \"userApi\",\r\n  baseQuery: baseQueryWithReauth,\r\n  tagTypes: [\"User\", \"CurrentUser\"],\r\n  endpoints: (build) => ({\r\n    getUsers: build.query<PaginatedData<User>, void>({\r\n      query: () => \"users\",\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.items.map(({ user_id }) => ({\r\n                type: \"User\" as const,\r\n                user_id,\r\n              })),\r\n              { type: \"User\", user_id: \"LIST\" },\r\n            ]\r\n          : [{ type: \"User\", user_id: \"LIST\" }],\r\n    }),\r\n    addUser: build.mutation<RegisterResponse, RegisterRequest>({\r\n      query: (registerRequest) => ({\r\n        url: \"users/\",\r\n        method: \"POST\",\r\n        body: registerRequest,\r\n      }),\r\n      invalidatesTags: [\"User\"],\r\n    }),\r\n    getUser: build.query<User, string>({\r\n      query: (id) => `users/${id}`,\r\n      providesTags: (result, error, user_id) => [{ type: \"User\", user_id }],\r\n    }),\r\n    updateUser: build.mutation<\r\n      CurrentUser,\r\n      Pick<CurrentUser, \"user_id\"> & Partial<CurrentUser>\r\n    >({\r\n      query: ({ user_id, ...patch }) => ({\r\n        url: `users/${user_id}`,\r\n        method: \"PUT\",\r\n        body: patch,\r\n      }),\r\n      async onQueryStarted(\r\n        { user_id, ...patch },\r\n        { dispatch, queryFulfilled }\r\n      ) {\r\n        const patchResult = dispatch(\r\n          userApi.util.updateQueryData(\r\n            \"getUser\",\r\n            user_id.toString(),\r\n            (draft) => {\r\n              Object.assign(draft, patch);\r\n            }\r\n          )\r\n        );\r\n        try {\r\n          await queryFulfilled;\r\n        } catch {\r\n          patchResult.undo();\r\n        }\r\n      },\r\n      invalidatesTags: (result, error, { user_id }) => [\r\n        { type: \"User\", user_id },\r\n      ],\r\n    }),\r\n    deleteUser: build.mutation<{ success: boolean; user_id: number }, number>({\r\n      query(user_id) {\r\n        return {\r\n          url: `users/${user_id}`,\r\n          method: \"DELETE\",\r\n        };\r\n      },\r\n      invalidatesTags: (result, error, user_id) => [{ type: \"User\", user_id }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useAddUserMutation,\r\n  useDeleteUserMutation,\r\n  useGetUserQuery,\r\n  useGetUsersQuery,\r\n  useUpdateUserMutation,\r\n} = userApi;\r\n","import React, { useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Alert from \"../Alert\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {\r\n  UserInfoAvatar,\r\n  UserInfoContainer,\r\n  UserInfoForm,\r\n  UserInfoSubmit,\r\n} from \"../Forms/userInfoStyles\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { useAddUserMutation } from \"../../app/services/user\";\r\nimport { useHistory } from \"react-router\";\r\nimport type { RegisterRequest } from \"../../app/services/user\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { string, object } from \"yup\";\r\nimport { FormTextField } from \"../Forms/FormComponents\";\r\n\r\nexport const RegisterView: React.FC = () => {\r\n  const validationSchema = object().shape({\r\n    first_name: string().required(\"First name is required.\"),\r\n    last_name: string().required(\"Last name is required.\"),\r\n    display_name: string().required(\"Field is required.\"),\r\n    email: string()\r\n      .required(\"Email address is required.\")\r\n      .email(\"Not a valid email.\"),\r\n    password: string().required(\"Password is required.\"),\r\n  });\r\n\r\n  const { push } = useHistory();\r\n\r\n  const { handleSubmit, control } = useForm<RegisterRequest>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const [signUp] = useAddUserMutation();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit = async (data: RegisterRequest) => {\r\n    try {\r\n      const response = await signUp(data).unwrap();\r\n      console.log(response);\r\n      push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Helmet>\r\n        <title>RunBracket - Register</title>\r\n      </Helmet>\r\n      <CssBaseline />\r\n      <UserInfoContainer>\r\n        <UserInfoAvatar>\r\n          <LockOutlinedIcon />\r\n        </UserInfoAvatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <UserInfoForm onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormTextField\r\n                name=\"first_name\"\r\n                label=\"First Name\"\r\n                control={control}\r\n                autoComplete=\"fname\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormTextField\r\n                name=\"last_name\"\r\n                label=\"Last Name\"\r\n                control={control}\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                name=\"display_name\"\r\n                label=\"Display Name\"\r\n                control={control}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                control={control}\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormTextField\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                control={control}\r\n                autoComplete=\"current-password\"\r\n                type=\"password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <UserInfoSubmit\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign Up\r\n          </UserInfoSubmit>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link\r\n                href=\"#\"\r\n                variant=\"body2\"\r\n                onClick={() => {\r\n                  push(\"/login\");\r\n                }}\r\n              >\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Alert\r\n            open={open}\r\n            handleClose={handleClose}\r\n            severity=\"error\"\r\n            message=\"Oops! There was a problem.\"\r\n          ></Alert>\r\n        </UserInfoForm>\r\n      </UserInfoContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","export default __webpack_public_path__ + \"static/media/background.fb463c5e.png\";","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport background from \"./background.png\";\r\n\r\nconst HeroGrid = styled(Grid)(({ theme }) => ({\r\n  height: \"100vh\",\r\n  backgroundPosition: \"center\",\r\n  backgroundImage: `linear-gradient(rgb(255, 255, 255, .5) 0%, ${theme.palette.primary.main} 100%), url(${background})`,\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"cover\",\r\n  backgroundAttachment: \"fixed\",\r\n  width: \"100%\",\r\n  objectFit: \"cover\",\r\n  borderRadius: \"0\",\r\n}));\r\n\r\ninterface Props {}\r\n\r\nexport const HeroSection: React.FC<Props> = () => {\r\n  const { push } = useHistory();\r\n  return (\r\n    <HeroGrid\r\n      container\r\n      alignContent=\"center\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      direction=\"column\"\r\n    >\r\n      <Grid item>\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h1\"\r\n          align=\"center\"\r\n          sx={{ fontWeight: 400, color: \"primary.contrastText\" }}\r\n        >\r\n          Run it back.\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item sx={{ color: \"primary.contrastText\" }}>\r\n        <Typography align=\"center\" variant=\"h5\" paragraph>\r\n          With a special twist on the classic tournament structure, claim your\r\n          spot at the top.\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => {\r\n            push(\"/tournaments/new\");\r\n          }}\r\n        >\r\n          Create Tournament\r\n        </Button>\r\n      </Grid>\r\n    </HeroGrid>\r\n  );\r\n};\r\n","import { Helmet } from \"react-helmet-async\";\r\nimport { HeroSection } from \"./HeroSection\";\r\n\r\nconst HomeView = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>RunBracket</title>\r\n      </Helmet>\r\n      <HeroSection></HeroSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeView;\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RootState } from \"../../app/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AvatarSize, stringAvatar } from \"../Avatar/Avatar\";\r\nimport { useAppDispatch } from \"../../hooks/store\";\r\nimport { logOut } from \"../../app/slices/authSlice\";\r\n\r\nconst HomeLink = styled(Link)(({}) => ({\r\n  textDecoration: \"none\",\r\n  userSelect: \"none\",\r\n}));\r\n\r\nconst NavigationBar = () => {\r\n  const { push } = useHistory();\r\n\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const user = useSelector((state: RootState) => state.auth);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const loginSection =\r\n    user.user != null ? (\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item>\r\n          <IconButton\r\n            id=\"user-button\"\r\n            aria-controls=\"menu-navbar\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded={open ? \"true\" : undefined}\r\n            onClick={handleMenu}\r\n            size=\"large\"\r\n          >\r\n            <Avatar\r\n              {...stringAvatar(user.user.display_name, AvatarSize.Small)}\r\n            />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"menu-navbar\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            MenuListProps={{\r\n              \"aria-labelledby\": \"user-button\",\r\n            }}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                push({\r\n                  pathname: `/users/${user.user?.user_id}`,\r\n                  state: { detail: user.user },\r\n                });\r\n                handleClose();\r\n              }}\r\n            >\r\n              My Profile\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                dispatch(logOut());\r\n                push(\"/\");\r\n              }}\r\n            >\r\n              Log-out\r\n            </MenuItem>\r\n          </Menu>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>{user.user.display_name}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    ) : (\r\n      <>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          sx={{ marginRight: 1 }}\r\n          onClick={() => push(\"/login\")}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Button color=\"secondary\" onClick={() => push(\"/register\")}>\r\n          Sign-up\r\n        </Button>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" color=\"default\">\r\n        <Toolbar>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Grid container alignItems=\"center\" spacing={3}>\r\n                <Grid item>\r\n                  <HomeLink to=\"/\">\r\n                    <Typography\r\n                      display=\"inline\"\r\n                      variant=\"h4\"\r\n                      sx={{\r\n                        color: \"text.primary\",\r\n                        fontWeight: 500,\r\n                        fontFamily: \"Righteous\",\r\n                      }}\r\n                    >\r\n                      run\r\n                    </Typography>\r\n                    <Typography\r\n                      display=\"inline\"\r\n                      variant=\"h4\"\r\n                      sx={{\r\n                        color: \"primary.main\",\r\n                        fontWeight: 500,\r\n                        fontFamily: \"Righteous\",\r\n                      }}\r\n                    >\r\n                      bracket\r\n                    </Typography>\r\n                  </HomeLink>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button color=\"primary\" onClick={() => push(\"/tournaments\")}>\r\n                    Tournaments\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container>\r\n                <Grid item></Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>{loginSection}</Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import { createApi } from \"@reduxjs/toolkit/query/react\";\r\nimport { match } from \"assert\";\r\nimport { baseQueryWithReauth } from \"./auth\";\r\nimport PaginatedData, { PaginationArguments } from \"./pagination\";\r\n\r\nexport enum StatusEnum {\r\n  NOT_STARTED = \"NOT_STARTED\",\r\n  IN_PROGRESS = \"IN_PROGRESS\",\r\n  COMPLETED = \"COMPLETED\",\r\n}\r\n\r\nexport interface Participant {\r\n  participant_id: null | number;\r\n  participant_name: string;\r\n  seed: null | number;\r\n}\r\n\r\nexport interface Match {\r\n  tournament_id: null | number;\r\n  match_id: null | number;\r\n  round: number;\r\n  date: Date;\r\n  status: StatusEnum;\r\n  participant_a_score: number;\r\n  participant_b_score: number;\r\n  participant_a: Participant;\r\n  participant_b: Participant;\r\n  winner_id: null | number;\r\n}\r\n\r\nexport interface UpdateMatchRequest {\r\n  match: Match;\r\n  winner: Participant | null;\r\n}\r\n\r\nexport type Tournaments = Tournament[];\r\n\r\nexport interface Tournament {\r\n  user_id: null | number;\r\n  tournament_id: null | number;\r\n  tournament_status: null | StatusEnum;\r\n  tournament_name: string;\r\n  tournament_description: string;\r\n  is_seeded: boolean;\r\n  has_thug_finals: boolean;\r\n  date: null | Date;\r\n  matches: null | Match[];\r\n  participants: Participant[];\r\n}\r\n\r\nexport const tournamentApi = createApi({\r\n  reducerPath: \"tournamentApi\",\r\n  baseQuery: baseQueryWithReauth,\r\n  tagTypes: [\"Tournament\"],\r\n  endpoints: (builder) => ({\r\n    tournament: builder.mutation<Tournament, Tournament>({\r\n      query: (tournament) => ({\r\n        url: \"tournaments/\",\r\n        method: \"POST\",\r\n        body: tournament,\r\n      }),\r\n      invalidatesTags: [\"Tournament\"],\r\n    }),\r\n    getTournaments: builder.query<\r\n      PaginatedData<Tournament>,\r\n      PaginationArguments\r\n    >({\r\n      query: (arg) => {\r\n        return {\r\n          url: \"tournaments/\",\r\n          params: { ...arg },\r\n        };\r\n      },\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.items.map(({ tournament_id }) => ({\r\n                type: \"Tournament\" as const,\r\n                tournament_id,\r\n              })),\r\n              { type: \"Tournament\", tournament_id: \"LIST\" },\r\n            ]\r\n          : [{ type: \"Tournament\", tournament_id: \"LIST\" }],\r\n    }),\r\n    getTournament: builder.query<Tournament, string>({\r\n      query: (id) => `tournaments/${id}`,\r\n      providesTags: (result, error, tournament_id) => [\r\n        { type: \"Tournament\", tournament_id },\r\n      ],\r\n    }),\r\n    getTournamentsByUserId: builder.query<\r\n      PaginatedData<Tournament>,\r\n      PaginationArguments\r\n    >({\r\n      query: (arg) => {\r\n        return {\r\n          url: \"tournaments/\",\r\n          params: { ...arg },\r\n        };\r\n      },\r\n    }),\r\n    updateMatch: builder.mutation<Match, Match>({\r\n      query: (arg) => ({\r\n        url: `tournaments/${arg.tournament_id}/matches/${arg.match_id}`,\r\n        method: \"PUT\",\r\n        body: arg,\r\n      }),\r\n      invalidatesTags: (result, error) => [\r\n        { type: \"Tournament\", tournament_id: result?.tournament_id },\r\n      ],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useTournamentMutation,\r\n  useGetTournamentsByUserIdQuery,\r\n  useGetTournamentsQuery,\r\n  useGetTournamentQuery,\r\n  useUpdateMatchMutation,\r\n} = tournamentApi;\r\n","import { Paper, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\ninterface SectionHeaderProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nexport const SectionHeader: React.FC<SectionHeaderProps> = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"h6\"\r\n      component=\"h2\"\r\n      color=\"primary\"\r\n      gutterBottom\r\n      paddingBottom={2}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport const PageSection = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  overflowX: \"auto\",\r\n}));\r\n\r\nexport const PageTitle: React.FC<SectionHeaderProps> = (props) => {\r\n  return (\r\n    <Typography marginY={3} variant=\"h2\" component=\"h1\" color=\"primary\">\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import { Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Control } from \"react-hook-form\";\r\nimport { Tournament } from \"../../../app/services/tournament\";\r\nimport { FormTextField } from \"../../Forms/FormComponents\";\r\nimport SectionHeader from \"../../Forms/SectionHeader\";\r\n\r\ninterface Props {\r\n  control: Control<Tournament, object>;\r\n}\r\n\r\nconst CreateTournamentInformation: React.FC<Props> = (props) => {\r\n  const { control } = props;\r\n  return (\r\n    <>\r\n      <SectionHeader>Tournament Information</SectionHeader>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <FormTextField\r\n            name=\"tournament_name\"\r\n            label=\"Name\"\r\n            control={control}\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormTextField\r\n            rows=\"3\"\r\n            name=\"tournament_description\"\r\n            label=\"Description\"\r\n            control={control}\r\n            multiline\r\n            required\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTournamentInformation;\r\n","import { Close } from \"@mui/icons-material\";\r\nimport { IconButton, TableCell, TableRow } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Control, FieldArrayWithId } from \"react-hook-form\";\r\nimport { Tournament } from \"../../../app/services/tournament\";\r\nimport { FormTextField } from \"../../Forms/FormComponents\";\r\n\r\ninterface Props {\r\n  item: FieldArrayWithId<Tournament, \"participants\", \"id\">;\r\n  index: number;\r\n  control: Control<Tournament, object>;\r\n  remove: (index?: number | number[] | undefined) => void;\r\n  is_seeded: boolean;\r\n}\r\n\r\nconst CreateParticipantRow: React.FC<Props> = (props) => {\r\n  const { item, control, remove, index, is_seeded } = props;\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        {is_seeded && <TableCell>{index + 1}</TableCell>}\r\n        <TableCell>\r\n          <FormTextField\r\n            required\r\n            variant=\"standard\"\r\n            name={`participants.${index}.participant_name`}\r\n            control={control}\r\n          />\r\n        </TableCell>\r\n        <TableCell>\r\n          <IconButton onClick={() => remove(index)} size=\"small\">\r\n            <Close />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateParticipantRow;\r\n","import {\r\n  Button,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { BaseSyntheticEvent, useState } from \"react\";\r\nimport { Control, useFieldArray, useForm, UseFormWatch } from \"react-hook-form\";\r\nimport { Tournament, Participant } from \"../../../app/services/tournament\";\r\nimport SectionHeader from \"../../Forms/SectionHeader\";\r\nimport CreateParticipantRow from \"./CreateParticipantRow\";\r\nimport { string, object } from \"yup\";\r\nimport { FormCheckbox, FormTextField } from \"../../Forms/FormComponents\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\ninterface Props {\r\n  control: Control<Tournament, object>;\r\n  watch: UseFormWatch<Tournament>;\r\n}\r\n\r\nconst CreateTournamentParticipants: React.FC<Props> = (props) => {\r\n  const { control, watch } = props;\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control: control,\r\n    name: \"participants\",\r\n  });\r\n\r\n  const is_seeded = watch(\"is_seeded\", true);\r\n  const defaultParticipant = {\r\n    participant_id: null,\r\n    participant_name: \"\",\r\n    seed: null,\r\n  };\r\n  const [participant, setParticipant] =\r\n    useState<Participant>(defaultParticipant);\r\n\r\n  const handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      addParticipant();\r\n    }\r\n  };\r\n\r\n  const addParticipant = () => {\r\n    if (participant.participant_name) {\r\n      append(participant);\r\n      setParticipant(defaultParticipant);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SectionHeader>Participants</SectionHeader>\r\n      <Grid container spacing={1} marginBottom={1}>\r\n        <Grid item xs={10}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Name\"\r\n            onKeyDown={handleKeyDown}\r\n            onChange={(e) =>\r\n              setParticipant({\r\n                ...participant,\r\n                participant_name: e.target.value,\r\n              })\r\n            }\r\n            value={participant.participant_name}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item alignSelf=\"center\" xs={2}>\r\n          <Button onClick={addParticipant} fullWidth variant=\"contained\">\r\n            ADD\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {fields.length > 0 && (\r\n        <TableContainer sx={{ maxHeight: 400, marginBottom: 1 }}>\r\n          <Table stickyHeader size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {is_seeded && <TableCell width=\"10%\">Seed</TableCell>}\r\n                <TableCell width=\"80%\">Name</TableCell>\r\n                <TableCell width=\"10%\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {fields.map((item, index) => {\r\n                return (\r\n                  <CreateParticipantRow\r\n                    key={item.id}\r\n                    {...{ item, control: control, remove, index, is_seeded }}\r\n                  />\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n      <FormCheckbox\r\n        name=\"is_seeded\"\r\n        control={control}\r\n        label=\"Include seeding\"\r\n      ></FormCheckbox>\r\n      <FormCheckbox\r\n        name=\"has_thug_finals\"\r\n        control={control}\r\n        label=\"Include Thug Finals\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTournamentParticipants;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Alert from \"../../Alert\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { array, boolean, object, string } from \"yup\";\r\nimport {\r\n  Tournament,\r\n  useTournamentMutation,\r\n} from \"../../../app/services/tournament\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport { greyBackgroundColor } from \"../../Theme/theme\";\r\nimport { UserInfoContainer, UserInfoForm } from \"../../Forms/userInfoStyles\";\r\nimport CreateTournamentInformation from \"./CreateTournamentInformation\";\r\nimport CreateTournamentParticipants from \"./CreateTournamentParticipants\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\n\r\nexport const CreateTournamentView: React.FC = () => {\r\n  const validationSchema = object().shape({\r\n    tournament_name: string().required(\"Name is required.\"),\r\n    tournament_description: string().required(\"Description is required.\"),\r\n    is_seeded: boolean().required(),\r\n    participants: array()\r\n      .of(\r\n        object().shape({\r\n          participant_name: string().required(\"Participant name is required.\"),\r\n        })\r\n      )\r\n      .required(),\r\n  });\r\n\r\n  const user = useSelector((state: RootState) => state.auth);\r\n\r\n  const { push } = useHistory();\r\n\r\n  const { handleSubmit, control, watch } = useForm<Tournament>({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const [createTournament] = useTournamentMutation();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const checkKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.code === \"Enter\") e.preventDefault();\r\n  };\r\n\r\n  const onSubmit = async (data: Tournament) => {\r\n    try {\r\n      const tournament = {\r\n        ...cloneDeep(data),\r\n        user_id: user.user ? user.user.user_id : null,\r\n      };\r\n      const response = await createTournament(tournament).unwrap();\r\n      push(`${response.tournament_id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: greyBackgroundColor,\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Helmet>\r\n          <title>Create Tournament - RunBracket</title>\r\n        </Helmet>\r\n        <CssBaseline />\r\n        <UserInfoContainer>\r\n          <UserInfoForm\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            onKeyDown={(e) => checkKeyDown(e)}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography\r\n                  marginY={3}\r\n                  variant=\"h2\"\r\n                  component=\"h1\"\r\n                  color=\"primary\"\r\n                >\r\n                  New Tournament\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 3,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <CreateTournamentInformation control={control} />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 3,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <CreateTournamentParticipants\r\n                    control={control}\r\n                    watch={watch}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item marginLeft=\"auto\" xs={3} marginTop={1}>\r\n                <Button type=\"submit\" variant=\"contained\" fullWidth>\r\n                  CREATE TOURNAMENT\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Alert\r\n              open={open}\r\n              handleClose={handleClose}\r\n              severity=\"error\"\r\n              message=\"Oops! There was a problem.\"\r\n            />\r\n          </UserInfoForm>\r\n        </UserInfoContainer>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateTournamentView;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\r\nimport { RootState } from \"../app/store\";\r\n\r\nexport const ProtectedRoute: React.FC<RouteProps> = (props) => {\r\n  const user = useSelector((state: RootState) => state.auth);\r\n  if (user.user == null) return <Redirect to=\"/login\" />;\r\n\r\n  return <Route {...props} />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { ListItem, ListItemButton, ListItemText } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Tournament } from \"../../../../app/services/tournament\";\r\n\r\ninterface Props {\r\n  tournament: Tournament;\r\n}\r\n\r\nconst TournamentRow: React.FC<Props> = (props) => {\r\n  const { push } = useHistory();\r\n  const { tournament_name, date, tournament_id } = props.tournament;\r\n  const handleClick = () => {\r\n    push(`/tournaments/${tournament_id}`);\r\n  };\r\n  const tournament_date = date\r\n    ? moment.utc(date).local().format(\"MMM Do, YYYY\")\r\n    : null;\r\n  return (\r\n    <ListItem>\r\n      <ListItemButton onClick={handleClick}>\r\n        <ListItemText\r\n          primary={tournament_name}\r\n          secondary={tournament_date?.toString()}\r\n        ></ListItemText>\r\n      </ListItemButton>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TournamentRow;\r\n","import { List, Pagination } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { User } from \"../../../../app/services/auth\";\r\nimport PaginatedData from \"../../../../app/services/pagination\";\r\nimport { Tournament } from \"../../../../app/services/tournament\";\r\nimport SectionHeader from \"../../../Forms/SectionHeader\";\r\nimport TournamentRow from \"./TournamentRow\";\r\n\r\ninterface Props {\r\n  tournaments: PaginatedData<Tournament>;\r\n  page: number;\r\n  count: number;\r\n  setPage: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst TournamentSection: React.FC<Props> = (props) => {\r\n  const { tournaments, page, count, setPage } = props;\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      <SectionHeader>Hosted Tournaments</SectionHeader>\r\n      <List>\r\n        {tournaments.items.map((tournament, index) => {\r\n          return (\r\n            <TournamentRow\r\n              key={tournament.tournament_id}\r\n              tournament={tournament}\r\n            ></TournamentRow>\r\n          );\r\n        })}\r\n      </List>\r\n      <Pagination page={page} onChange={handleChange} count={count} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TournamentSection;\r\n","import { Avatar, Grid, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { User } from \"../../../app/services/auth\";\r\nimport { AvatarSize, stringAvatar } from \"../../Avatar/Avatar\";\r\nimport SectionHeader from \"../../Forms/SectionHeader\";\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\n\r\nconst UserProfileInformation: React.FC<Props> = (props) => {\r\n  const { user } = props;\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item sm={1}>\r\n          <Avatar {...stringAvatar(user.display_name, AvatarSize.Large)} />\r\n        </Grid>\r\n        <Grid item sm={11}>\r\n          <Typography variant=\"h5\" component=\"h1\">\r\n            {user.display_name}\r\n          </Typography>\r\n          <Typography variant=\"body1\" sx={{ color: \"text.secondary\" }}>\r\n            {user.first_name + \" \" + user.last_name}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfileInformation;\r\n","import { Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Control } from \"react-hook-form\";\r\nimport { CurrentUser, User } from \"../../../app/services/auth\";\r\nimport { FormTextField } from \"../../Forms/FormComponents\";\r\n\r\ninterface Props {\r\n  user: CurrentUser;\r\n  control: Control<CurrentUser, object>;\r\n}\r\n\r\nconst EditUserAccountInformation: React.FC<Props> = (props) => {\r\n  const { user, control } = props;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormTextField\r\n          name=\"first_name\"\r\n          label=\"First Name\"\r\n          control={control}\r\n          autoComplete=\"fname\"\r\n          autoFocus\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <FormTextField\r\n          name=\"last_name\"\r\n          label=\"Last Name\"\r\n          control={control}\r\n          autoComplete=\"lname\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormTextField\r\n          name=\"display_name\"\r\n          label=\"Display Name\"\r\n          control={control}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <FormTextField\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          control={control}\r\n          autoComplete=\"email\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EditUserAccountInformation;\r\n","import { Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Control } from \"react-hook-form\";\r\nimport { CurrentUser, User } from \"../../../app/services/auth\";\r\nimport { DarkModeSwitch } from \"../../Forms/DarkModeSwitch\";\r\nimport { FormDarkModeSwitch } from \"../../Forms/FormComponents\";\r\n\r\ninterface Props {\r\n  control: Control<CurrentUser, object>;\r\n}\r\n\r\nconst EditUserAccountSettings: React.FC<Props> = (props) => {\r\n  const { control } = props;\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <FormDarkModeSwitch name=\"dark_mode\" label=\"Theme\" control={control} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EditUserAccountSettings;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, Divider, Grid } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { object, string } from \"yup\";\r\nimport { CurrentUser, User } from \"../../../app/services/auth\";\r\nimport { useUpdateUserMutation } from \"../../../app/services/user\";\r\nimport { setUser } from \"../../../app/slices/authSlice\";\r\nimport { useAppDispatch } from \"../../../hooks/store\";\r\nimport Alert, {\r\n  AlertParams,\r\n  DefaultErrorAlert,\r\n  DefaultSuccessAlert,\r\n} from \"../../Alert\";\r\nimport SectionHeader from \"../../Forms/SectionHeader\";\r\nimport EditUserAccountInformation from \"./EditUserAccountInformation\";\r\nimport EditUserAccountSettings from \"./EditUserAccountSettings\";\r\n\r\ninterface Props {\r\n  user: CurrentUser;\r\n}\r\n\r\nconst UserSettings: React.FC<Props> = (props) => {\r\n  const { user } = props;\r\n  const validationSchema = object().shape({\r\n    first_name: string().required(\"First name is required.\"),\r\n    last_name: string().required(\"Last name is required.\"),\r\n    display_name: string().required(\"Field is required.\"),\r\n    email: string()\r\n      .required(\"Email address is required.\")\r\n      .email(\"Not a valid email.\"),\r\n  });\r\n\r\n  const { handleSubmit, control } = useForm<CurrentUser>({\r\n    resolver: yupResolver(validationSchema),\r\n    defaultValues: user,\r\n  });\r\n\r\n  const [updateUser] = useUpdateUserMutation();\r\n\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  const [alert, setAlert] = useState<AlertParams>(DefaultErrorAlert);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onSubmit = async (data: CurrentUser) => {\r\n    try {\r\n      const response = await updateUser(data).unwrap();\r\n      dispatch(setUser({ user: response }));\r\n      setAlert(DefaultSuccessAlert);\r\n      setOpen(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setAlert(DefaultErrorAlert);\r\n      setOpen(true);\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <SectionHeader>Account Information</SectionHeader>\r\n          <EditUserAccountInformation user={user} control={control} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <SectionHeader>Settings</SectionHeader>\r\n          <EditUserAccountSettings control={control} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Divider />\r\n        </Grid>\r\n        <Grid item marginLeft=\"auto\" xs={2} marginTop={1}>\r\n          <Button type=\"submit\" variant=\"contained\" fullWidth>\r\n            SAVE CHANGES\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Alert\r\n        message={alert.message}\r\n        open={open}\r\n        severity={alert.severity}\r\n        handleClose={handleClose}\r\n      ></Alert>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserSettings;\r\n","import {\r\n  Backdrop,\r\n  Box,\r\n  CircularProgress,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useGetTournamentsByUserIdQuery } from \"../../../app/services/tournament\";\r\nimport { useGetUserQuery } from \"../../../app/services/user\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport { PageSection } from \"../../Forms/SectionHeader\";\r\nimport { UserInfoContainer } from \"../../Forms/userInfoStyles\";\r\nimport { greyBackgroundColor } from \"../../Theme/theme\";\r\nimport TournamentSection from \"./Tournaments/TournamentSection\";\r\nimport UserProfileInformation from \"./UserProfileInformation\";\r\nimport UserSettings from \"./UserSettings\";\r\n\r\nexport const UserProfileView: React.FC = () => {\r\n  const { push } = useHistory();\r\n\r\n  const user = useSelector((state: RootState) => state.auth);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const handleChange = (event: React.SyntheticEvent, tab: number) => {\r\n    setSelectedTab(tab);\r\n  };\r\n  const [page, setPage] = useState(1);\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const { data, isLoading } = useGetUserQuery(id);\r\n\r\n  const { data: tournamentData, isLoading: tournamentDataIsLoading } =\r\n    useGetTournamentsByUserIdQuery({\r\n      page: page,\r\n      per_page: 5,\r\n      user_id: parseInt(id),\r\n    });\r\n\r\n  const isCurrentUser = user.user && user.user.user_id == parseInt(id);\r\n  const hasTournaments = tournamentData && tournamentData.items.length > 0;\r\n  if (isLoading) {\r\n    return (\r\n      <Backdrop open={isLoading && tournamentDataIsLoading}>\r\n        <CircularProgress />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: greyBackgroundColor,\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Helmet>\r\n          <title>{data ? data.display_name : \"User\"} - RunBracket</title>\r\n        </Helmet>\r\n        <CssBaseline />\r\n        <UserInfoContainer>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <PageSection>\r\n                {data && <UserProfileInformation user={data} />}\r\n              </PageSection>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <>\r\n                <Tabs value={selectedTab} onChange={handleChange}>\r\n                  <Tab label=\"Tournaments\" />\r\n                  {isCurrentUser && <Tab label=\"Settings\" />}\r\n                </Tabs>\r\n                <PageSection>\r\n                  {selectedTab === 0 &&\r\n                    (hasTournaments ? (\r\n                      <TournamentSection\r\n                        tournaments={tournamentData}\r\n                        count={tournamentData._meta.total_pages}\r\n                        page={page}\r\n                        setPage={setPage}\r\n                      ></TournamentSection>\r\n                    ) : (\r\n                      <Typography>No tournaments created yet.</Typography>\r\n                    ))}\r\n                  {user.user && selectedTab === 1 && (\r\n                    <UserSettings user={user.user} />\r\n                  )}\r\n                </PageSection>\r\n              </>\r\n            </Grid>\r\n          </Grid>\r\n        </UserInfoContainer>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserProfileView;\r\n","import * as React from \"react\";\r\nimport { Link, MemoryRouter, Route } from \"react-router-dom\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport PaginationItem from \"@mui/material/PaginationItem\";\r\n\r\ninterface PaginationProps {\r\n  baseLink: string;\r\n  count: number | undefined;\r\n}\r\nexport const PaginationLink: React.FC<PaginationProps> = (props) => {\r\n  const { baseLink, count } = props;\r\n  return (\r\n    <Route>\r\n      {({ location }) => {\r\n        const query = new URLSearchParams(location.search);\r\n        const page = parseInt(query.get(\"page\") || \"1\", 10);\r\n        return (\r\n          <Pagination\r\n            page={page}\r\n            count={count ? count : 1}\r\n            renderItem={(item) => (\r\n              <PaginationItem\r\n                component={Link}\r\n                to={`${baseLink}${item.page === 1 ? \"\" : `?page=${item.page}`}`}\r\n                {...item}\r\n              />\r\n            )}\r\n          />\r\n        );\r\n      }}\r\n    </Route>\r\n  );\r\n};\r\n","import {\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  List,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useGetTournamentsQuery } from \"../../../app/services/tournament\";\r\nimport useQuery from \"../../../hooks/routing\";\r\nimport { PageSection, PageTitle } from \"../../Forms/SectionHeader\";\r\nimport { UserInfoContainer } from \"../../Forms/userInfoStyles\";\r\nimport { PaginationLink } from \"../../Pagination/PaginationLink\";\r\nimport { greyBackgroundColor } from \"../../Theme/theme\";\r\nimport TournamentRow from \"../UserProfile/Tournaments/TournamentRow\";\r\n\r\nconst TournamentsView = () => {\r\n  let query = useQuery();\r\n  const page = query.get(\"page\") || \"1\";\r\n  const { data, isLoading } = useGetTournamentsQuery({\r\n    page: parseInt(page),\r\n    per_page: 5,\r\n  });\r\n  const { push } = useHistory();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Backdrop open={isLoading}>\r\n        <CircularProgress />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: greyBackgroundColor,\r\n        flexGrow: 1,\r\n        height: \"100vh\",\r\n        overflow: \"auto\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <UserInfoContainer>\r\n          <Helmet>\r\n            <title>Tournaments - RunBracket</title>\r\n          </Helmet>\r\n          <Grid container spacing={3} paddingBottom={1}>\r\n            <Grid item xs={12} sm={9}>\r\n              <PageTitle>Tournaments</PageTitle>\r\n            </Grid>\r\n            <Grid alignSelf=\"center\" item xs={3}>\r\n              <Button\r\n                onClick={() => {\r\n                  push(\"/tournaments/new\");\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                CREATE TOURNAMENT\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <PageSection>\r\n                <List>\r\n                  {data &&\r\n                    data.items.map((tournament) => {\r\n                      return (\r\n                        <TournamentRow\r\n                          key={tournament.tournament_id}\r\n                          tournament={tournament}\r\n                        />\r\n                      );\r\n                    })}\r\n                </List>\r\n              </PageSection>\r\n            </Grid>\r\n          </Grid>\r\n          <PaginationLink\r\n            baseLink=\"/tournaments\"\r\n            count={data?._meta.total_pages}\r\n          ></PaginationLink>\r\n        </UserInfoContainer>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TournamentsView;\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { CurrentUser, User } from \"../services/auth\";\r\nimport { Match } from \"../services/tournament\";\r\n\r\ntype TournamentViewState = {\r\n  dialogOpen: boolean;\r\n  selectedMatch: Match | null;\r\n  hasPermission: boolean;\r\n};\r\n\r\nconst tournamentSlice = createSlice({\r\n  name: \"tournament\",\r\n  initialState: {\r\n    dialogOpen: false,\r\n    selectedMatch: null,\r\n    hasPermission: false,\r\n  } as TournamentViewState,\r\n  reducers: {\r\n    showDialogForMatch: (state, { payload: match }: PayloadAction<Match>) => {\r\n      state.selectedMatch = match;\r\n      state.dialogOpen = true;\r\n    },\r\n    closeDialog: (state) => {\r\n      state.dialogOpen = false;\r\n    },\r\n    setPermission: (\r\n      state,\r\n      { payload: hasPermission }: PayloadAction<boolean>\r\n    ) => {\r\n      state.hasPermission = hasPermission;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { showDialogForMatch, closeDialog, setPermission } =\r\n  tournamentSlice.actions;\r\n\r\nexport default tournamentSlice.reducer;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  Match,\r\n  Participant,\r\n  UpdateMatchRequest,\r\n  useUpdateMatchMutation,\r\n} from \"../../../app/services/tournament\";\r\nimport {\r\n  Container,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport { FormTextField } from \"../../Forms/FormComponents\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface DialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  match: Match;\r\n}\r\n\r\nexport const RecordMatchDialog: React.FC<DialogProps> = (props) => {\r\n  const { open, onClose: closeDialog, match } = props;\r\n\r\n  const [updateMatch] = useUpdateMatchMutation();\r\n\r\n  const { handleSubmit, control, getValues, setValue, reset } = useForm<Match>({\r\n    defaultValues: match,\r\n  });\r\n\r\n  useEffect(() => {\r\n    reset(match);\r\n  }, [open]);\r\n\r\n  const onSubmit = async (data: Match) => {\r\n    try {\r\n      const response = await updateMatch(data).unwrap();\r\n      closeDialog();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={closeDialog}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <DialogTitle>\r\n            Record Match\r\n            {\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                onClick={closeDialog}\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  right: 8,\r\n                  top: 8,\r\n                  color: (theme) => theme.palette.grey[500],\r\n                }}\r\n              >\r\n                <Close />\r\n              </IconButton>\r\n            }\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Fill out each participant's score and select a winner.\r\n            </DialogContentText>\r\n            <Grid container spacing={3} paddingTop={2}>\r\n              <Grid item xs={12}>\r\n                <Typography>Score</Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormTextField\r\n                  name=\"participant_a_score\"\r\n                  control={control}\r\n                  label={match.participant_a.participant_name}\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormTextField\r\n                  name=\"participant_b_score\"\r\n                  control={control}\r\n                  label={match.participant_b.participant_name}\r\n                  type=\"number\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography>Winner</Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Controller\r\n                  render={({ field }) => (\r\n                    <ToggleButtonGroup\r\n                      color=\"primary\"\r\n                      exclusive\r\n                      value={getValues(\"winner_id\")}\r\n                      onChange={(\r\n                        event: React.MouseEvent,\r\n                        newAlignment: number\r\n                      ) => {\r\n                        setValue(\"winner_id\", newAlignment);\r\n                      }}\r\n                    >\r\n                      <ToggleButton\r\n                        value={match.participant_a.participant_id}\r\n                        key=\"participant_a\"\r\n                      >\r\n                        {match.participant_a.participant_name}\r\n                      </ToggleButton>\r\n                      <ToggleButton\r\n                        value={match.participant_b.participant_id}\r\n                        key=\"participant_b\"\r\n                      >\r\n                        {match.participant_b.participant_name}\r\n                      </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                  )}\r\n                  name=\"winner_id\"\r\n                  control={control}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={closeDialog}>Cancel</Button>\r\n            <Button type=\"submit\">Save</Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecordMatchDialog;\r\n","import { Edit } from \"@mui/icons-material\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { borderRadius } from \"@mui/system\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport {\r\n  RenderSeedProps,\r\n  Seed,\r\n  SeedItem,\r\n  SeedTeam,\r\n  SeedTime,\r\n} from \"react-brackets\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Match,\r\n  Participant,\r\n  StatusEnum,\r\n} from \"../../../app/services/tournament\";\r\nimport { showDialogForMatch } from \"../../../app/slices/tournamentSlice\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport { useAppDispatch } from \"../../../hooks/store\";\r\nimport { greyBackgroundColor } from \"../../Theme/theme\";\r\n\r\ninterface SeedProps extends RenderSeedProps {\r\n  seed: Match;\r\n}\r\n\r\ninterface BracketSeedItemProps {\r\n  match: Match;\r\n}\r\n\r\ninterface BracketSeedParticipantProps {\r\n  participant: Participant | null;\r\n}\r\n\r\ninterface BracketSeedScoreProps {\r\n  score: number;\r\n  is_winner: boolean;\r\n}\r\n\r\nconst BracketSeed: React.FC<SeedProps> = ({ seed, breakpoint }) => {\r\n  // breakpoint passed to Bracket component\r\n  // to check if mobile view is triggered or not\r\n\r\n  // mobileBreakpoint is required to be passed down to a seed\r\n  return (\r\n    <Seed mobileBreakpoint={breakpoint} style={{ fontSize: 12 }}>\r\n      <BracketSeedItem match={seed}></BracketSeedItem>\r\n      {seed.date && (\r\n        <SeedTime mobileBreakpoint={breakpoint}>\r\n          {moment.utc(seed.date).local().format(\"MMM Do, YYYY h:mm a\")}\r\n        </SeedTime>\r\n      )}\r\n    </Seed>\r\n  );\r\n};\r\n\r\nconst WinnerTypography = styled(Typography)(({ theme }) => ({\r\n  backgroundColor: theme.palette.secondary.main,\r\n  borderRadius: \"3px\",\r\n}));\r\n\r\nconst BracketSeedParticipant: React.FC<BracketSeedParticipantProps> = (\r\n  props\r\n) => {\r\n  const { participant } = props;\r\n  return (\r\n    <Typography paddingLeft={1} variant=\"body2\">\r\n      {participant ? participant.participant_name : \"--\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst BracketSeedScore: React.FC<BracketSeedScoreProps> = (props) => {\r\n  const { is_winner, score } = props;\r\n  return is_winner ? (\r\n    <WinnerTypography variant=\"body2\">{score}</WinnerTypography>\r\n  ) : (\r\n    <Typography variant=\"body2\">{score}</Typography>\r\n  );\r\n};\r\n\r\nconst BracketSeedItem: React.FC<BracketSeedItemProps> = (props) => {\r\n  const { match } = props;\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const hasPermission =\r\n    useSelector((state: RootState) => state.tournament.hasPermission) &&\r\n    match.status != StatusEnum.COMPLETED &&\r\n    match.participant_a &&\r\n    match.participant_b;\r\n\r\n  const handleClick = () => {\r\n    dispatch(showDialogForMatch(match));\r\n  };\r\n  return (\r\n    <Paper variant=\"outlined\" sx={{ background: greyBackgroundColor }}>\r\n      <Grid container width={150}>\r\n        <Grid item xs={9}>\r\n          <>\r\n            <BracketSeedParticipant participant={match.participant_a} />\r\n            <Divider />\r\n            <BracketSeedParticipant participant={match.participant_b} />\r\n          </>\r\n        </Grid>\r\n        <Divider orientation=\"vertical\" flexItem sx={{ marginRight: \"-1px\" }} />\r\n        <Grid item xs={3} textAlign=\"center\">\r\n          {hasPermission ? (\r\n            <IconButton onClick={handleClick}>\r\n              <Edit></Edit>\r\n            </IconButton>\r\n          ) : (\r\n            <>\r\n              <BracketSeedScore\r\n                is_winner={IsWinner(match, match.participant_a)}\r\n                score={match.participant_a_score}\r\n              />\r\n              <Divider />\r\n              <BracketSeedScore\r\n                is_winner={IsWinner(match, match.participant_b)}\r\n                score={match.participant_b_score}\r\n              />\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst IsWinner = (match: Match, participant: Participant) => {\r\n  return Boolean(\r\n    match.winner_id &&\r\n      participant &&\r\n      match.winner_id === participant.participant_id\r\n  );\r\n};\r\n\r\nexport default BracketSeed;\r\n","import { Divider, Grid, Typography } from \"@mui/material\";\r\nimport { palette } from \"@mui/system\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Match, Tournament } from \"../../../app/services/tournament\";\r\nimport SectionHeader from \"../../Forms/SectionHeader\";\r\nimport { Bracket, RoundProps } from \"react-brackets\";\r\nimport BracketSeed from \"./BracketSeed\";\r\n\r\ninterface Props {\r\n  tournament: Tournament;\r\n}\r\n\r\nconst TournamentBracket: React.FC<Props> = (props) => {\r\n  const { tournament } = props;\r\n\r\n  const result = tournament.matches\r\n    ? tournament.matches.reduce<RoundProps[]>((r, match) => {\r\n        var temp = r.find((o: RoundProps) => o.title == match.round.toString());\r\n        if (!temp)\r\n          r.push((temp = { title: match.round.toString(), seeds: [] }));\r\n        temp.seeds.push(match);\r\n        return r;\r\n      }, [] as RoundProps[])\r\n    : ([] as RoundProps[]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <SectionHeader>Bracket</SectionHeader>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {result.length === 0 ? (\r\n            <Typography>No bracket available.</Typography>\r\n          ) : (\r\n            <Bracket\r\n              rounds={result}\r\n              roundTitleComponent={(\r\n                title: React.ReactNode,\r\n                roundIndex: number\r\n              ) => {\r\n                return (\r\n                  <Typography alignSelf=\"center\" variant=\"body1\">\r\n                    {`Round ${title}`}\r\n                  </Typography>\r\n                );\r\n              }}\r\n              renderSeedComponent={BracketSeed}\r\n            ></Bracket>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TournamentBracket;\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport { palette } from \"@mui/system\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Tournament } from \"../../../app/services/tournament\";\r\n\r\ninterface Props {\r\n  tournament: Tournament;\r\n}\r\n\r\nconst TournamentInformation: React.FC<Props> = (props) => {\r\n  const { tournament } = props;\r\n\r\n  const tournament_date = tournament.date\r\n    ? moment.utc(tournament.date).local().format(\"MMM Do, YYYY\")\r\n    : null;\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">{tournament.tournament_name}</Typography>\r\n          <Typography\r\n            variant=\"body1\"\r\n            sx={{\r\n              color: \"text.secondary\",\r\n            }}\r\n          >\r\n            {tournament_date}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TournamentInformation;\r\n","import { TableCell, TableRow, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Participant } from \"../../../app/services/tournament\";\r\n\r\ninterface Props {\r\n  participant: Participant;\r\n}\r\n\r\nconst ParticipantRow: React.FC<Props> = (props) => {\r\n  const { participant } = props;\r\n  return (\r\n    <>\r\n      <TableRow>\r\n        <TableCell>\r\n          <Typography>{participant.seed}</Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography>{participant.participant_name}</Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParticipantRow;\r\n","import {\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { palette } from \"@mui/system\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { Tournament } from \"../../../app/services/tournament\";\r\nimport SectionHeader from \"../../Forms/SectionHeader\";\r\nimport ParticipantRow from \"./ParticipantRow\";\r\n\r\ninterface Props {\r\n  tournament: Tournament;\r\n}\r\n\r\nconst TournamentParticipants: React.FC<Props> = (props) => {\r\n  const { tournament } = props;\r\n\r\n  const tournament_date = tournament.date\r\n    ? moment.utc(tournament.date).local().format(\"MMM Do, YYYY\")\r\n    : null;\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <SectionHeader>Participants</SectionHeader>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"10%\">Seed</TableCell>\r\n                <TableCell width=\"80%\">Name</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tournament.participants.map((item) => {\r\n                return (\r\n                  <ParticipantRow\r\n                    key={item.participant_id}\r\n                    participant={item}\r\n                  />\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TournamentParticipants;\r\n","import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Tab,\r\n  Tabs,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Match, useGetTournamentQuery } from \"../../../app/services/tournament\";\r\nimport {\r\n  closeDialog,\r\n  setPermission,\r\n  showDialogForMatch,\r\n} from \"../../../app/slices/tournamentSlice\";\r\nimport { RootState } from \"../../../app/store\";\r\nimport { useAppDispatch } from \"../../../hooks/store\";\r\nimport { PageSection } from \"../../Forms/SectionHeader\";\r\nimport { BackgroundBox, UserInfoContainer } from \"../../Forms/userInfoStyles\";\r\nimport RecordMatchDialog from \"./RecordMatchDialog\";\r\nimport TournamentBracket from \"./TournamentBracket\";\r\nimport TournamentInformation from \"./TournamentInformation\";\r\nimport TournamentParticipants from \"./TournamentParticipants\";\r\n\r\ninterface Props {}\r\n\r\nconst TournamentView: React.FC<Props> = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { data: tournament, isLoading } = useGetTournamentQuery(id);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const selectedMatch = useSelector(\r\n    (state: RootState) => state.tournament.selectedMatch\r\n  );\r\n  const open = useSelector((state: RootState) => state.tournament.dialogOpen);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeDialog());\r\n  };\r\n\r\n  const handleOpen = (match: Match) => {\r\n    dispatch(showDialogForMatch(match));\r\n  };\r\n\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  dispatch(\r\n    setPermission(\r\n      Boolean(tournament && user && tournament.user_id == user.user_id)\r\n    )\r\n  );\r\n\r\n  const handleChange = (event: React.SyntheticEvent, tab: number) => {\r\n    setSelectedTab(tab);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Backdrop open={isLoading}>\r\n        <CircularProgress />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BackgroundBox>\r\n      <Container>\r\n        <UserInfoContainer>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              {tournament && (\r\n                <PageSection>\r\n                  <TournamentInformation tournament={tournament} />\r\n                </PageSection>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {tournament && (\r\n                <>\r\n                  <Tabs value={selectedTab} onChange={handleChange}>\r\n                    <Tab label=\"Bracket\" />\r\n                    <Tab label=\"Participants\" />\r\n                  </Tabs>\r\n                  <PageSection>\r\n                    {selectedTab === 0 && (\r\n                      <TournamentBracket tournament={tournament} />\r\n                    )}\r\n                    {selectedTab === 1 && (\r\n                      <TournamentParticipants tournament={tournament} />\r\n                    )}\r\n                  </PageSection>\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </UserInfoContainer>\r\n        {selectedMatch && (\r\n          <RecordMatchDialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            match={selectedMatch}\r\n          />\r\n        )}\r\n      </Container>\r\n    </BackgroundBox>\r\n  );\r\n};\r\n\r\nexport default TournamentView;\r\n","import LoginView from \"./components/Views/LoginView\";\r\nimport RegisterView from \"./components/Views/RegisterView\";\r\nimport HomeView from \"./components/Views/Home/HomeView\";\r\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { CssBaseline } from \"@mui/material\";\r\nimport CreateTournamentView from \"./components/Views/CreateTournament/CreateTournamentView\";\r\nimport { ProtectedRoute } from \"./components/ProtectedRoute\";\r\nimport { UserProfileView } from \"./components/Views/UserProfile/UserProfileView\";\r\nimport TournamentsView from \"./components/Views/Tournaments/TournamentsView\";\r\nimport TournamentView from \"./components/Views/Tournament/TournamentView\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <NavigationBar></NavigationBar>\r\n      <Switch>\r\n        <Route exact component={LoginView} path=\"/login\" />\r\n        <Route exact component={RegisterView} path=\"/register\" />\r\n        <Route exact component={HomeView} path=\"/\" />\r\n        <Route exact component={TournamentsView} path=\"/tournaments\" />\r\n        <ProtectedRoute\r\n          exact\r\n          component={CreateTournamentView}\r\n          path=\"/tournaments/new\"\r\n        />\r\n        <ProtectedRoute exact component={UserProfileView} path=\"/users/:id\" />\r\n        <Route exact component={TournamentView} path=\"/tournaments/:id\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { authApi } from \"./services/auth\";\r\nimport authReducer from \"./slices/authSlice\";\r\nimport tournamentReducer from \"./slices/tournamentSlice\";\r\nimport { userApi } from \"./services/user\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { tournamentApi } from \"./services/tournament\";\r\n\r\nconst rootReducer = combineReducers({\r\n  [userApi.reducerPath]: userApi.reducer,\r\n  [authApi.reducerPath]: authApi.reducer,\r\n  [tournamentApi.reducerPath]: tournamentApi.reducer,\r\n  auth: authReducer,\r\n  tournament: tournamentReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n  blacklist: [\r\n    userApi.reducerPath,\r\n    authApi.reducerPath,\r\n    tournamentApi.reducerPath,\r\n  ],\r\n  whitelist: [\"auth\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(userApi.middleware, authApi.middleware, tournamentApi.middleware),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import { ThemeProvider } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../app/store\";\r\nimport theme, { darkTheme } from \"./theme\";\r\n\r\ninterface Props {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst CustomThemeProvider: React.FC<Props> = (props) => {\r\n  const { children } = props;\r\n  const user = useSelector((state: RootState) => state.auth);\r\n  const darkMode = user.user ? user.user.dark_mode : false;\r\n\r\n  return (\r\n    <ThemeProvider theme={darkMode ? darkTheme : theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default CustomThemeProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ThemeProvider, StyledEngineProvider } from \"@mui/material/styles\";\r\nimport App from \"./App\";\r\nimport { store, persistor } from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport theme from \"./components/Theme/theme\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport CustomThemeProvider from \"./components/Theme/CustomThemeProvider\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <StyledEngineProvider injectFirst>\r\n        <CustomThemeProvider>\r\n          <Router>\r\n            <HelmetProvider>\r\n              <React.StrictMode>\r\n                <App />\r\n              </React.StrictMode>\r\n            </HelmetProvider>\r\n          </Router>\r\n        </CustomThemeProvider>\r\n      </StyledEngineProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}