"""Test

Revision ID: cdfa16f45e1f
Revises: 
Create Date: 2021-10-26 21:26:39.648520

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cdfa16f45e1f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('display_name', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('register_date', sa.DateTime(), nullable=True),
    sa.Column('dark_mode', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('tournament',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('tournament_name', sa.String(length=255), nullable=True),
    sa.Column('tournament_description', sa.String(length=500), nullable=True),
    sa.Column('is_seeded', sa.Boolean(), nullable=True),
    sa.Column('has_thug_finals', sa.Boolean(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', name='statusenum'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('tournament_id')
    )
    op.create_table('participant',
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('participant_name', sa.String(length=255), nullable=True),
    sa.Column('seed', sa.Integer(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.tournament_id'], ),
    sa.PrimaryKeyConstraint('participant_id')
    )
    op.create_table('match',
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('winner_match_id', sa.Integer(), nullable=True),
    sa.Column('round', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('participant_a_score', sa.Integer(), nullable=True),
    sa.Column('participant_b_score', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('participant_a_id', sa.Integer(), nullable=True),
    sa.Column('participant_b_id', sa.Integer(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', name='statusenum'), nullable=True),
    sa.ForeignKeyConstraint(['participant_a_id'], ['participant.participant_id'], ),
    sa.ForeignKeyConstraint(['participant_b_id'], ['participant.participant_id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournament.tournament_id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['participant.participant_id'], ),
    sa.ForeignKeyConstraint(['winner_match_id'], ['match.match_id'], ),
    sa.PrimaryKeyConstraint('match_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('match')
    op.drop_table('participant')
    op.drop_table('tournament')
    op.drop_table('user')
    # ### end Alembic commands ###
